sudo: required

language: go
go:
  - "1.10.x"

install: true

notifications:
  email:
    on_success: never
    on_failure: always

services:
  - docker

env: 
  - DOCKER_COMPOSE_VERSION=1.21.0 HOST=127.0.0.1 DB_PORT=27017 ABCI_PORT=46658 P2P_PORT=46656 GRPC_PORT=46657 REST_PORT=8889

before_install:
  # update docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce
  # update docker-compose
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  # generate msgpack binaries
  - go get github.com/tinylib/msgp
  - cd ${TRAVIS_BUILD_DIR}/transaction && go generate
  - cd ${TRAVIS_BUILD_DIR}/state && go generate

jobs:
  include:
  - stage: build
    before_script:
    - cd ${TRAVIS_BUILD_DIR}/deploy/DOCKER
    # check builds
    script:
    - if [ "$TRAVIS_BRANCH" == "master" ] || [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then 
          make build;
      elif [ "$TRAVIS_BRANCH" == "develop" ]; then
          make build_develop;
      fi
  - stage: run
    before_script:
    - cd ${TRAVIS_BUILD_DIR}/deploy/DOCKER
    script:
    - docker run -d -p ${DB_PORT}:${DB_PORT} --name leadschain-mongodb mongo:latest /bin/bash -c "mongod --bind_ip_all --quiet"
    - docker run -d -p ${ABCI_PORT}:${ABCI_PORT} --name leadschain-abci leadschain/abci /bin/bash -c "tmlc-abci --dbhost=mongodb://${HOST}:${DB_PORT} --addr=tcp://${HOST}:${ABCI_PORT} --loglevel=*:error"
    - docker run -d -p ${P2P_PORT}:${P2P_PORT} -p ${GRPC_PORT}:${GRPC_PORT} --name leadschain-node leadschain/node /bin/bash -c "tendermint init && tendermint node --proxy_app=tcp://${HOST}:${ABCI_PORT} --p2p.laddr=tcp://${NODE_IP}:${P2P_PORT} --rpc.laddr=tcp://${NODE_IP}:${GRPC_PORT}"
    - docker run -d -p ${NODE_PORT}:${NODE_PORT} --name leadschain-node leadschain/node /bin/bash -c "tmlc-api --endpoint=http://${NODE_IP}:${GRPC_PORT} --ip=${NODE_IP} --port=${REST_PORT} --loglevel=*:error"
  - stage: test
    before_script:
    - cd ${TRAVIS_BUILD_DIR}
    script:
    - cd api/tests
    - go test -v handler_test.go -args -host=${HOST}-update=true
  - stage: deploy to dockerhub
    before_script:
    - cd ${TRAVIS_BUILD_DIR}/deploy/DOCKER
    script:
    - if [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then 
          make login push;
      elif [ "$TRAVIS_BRANCH" == "develop" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
          make login push_develop;
      fi

